package io.netflow.flows.cflow

object TemplateFields extends Enumeration {
  val InBYTES = Value(1, "InBYTES")
  val InPKTS = Value(2, "InPKTS")
  val FLOWS = Value(3, "FLOWS")
  val PROT = Value(4, "PROT")
  val SRC_TOS = Value(5, "SRC_TOS")
  val TCP_FLAGS = Value(6, "TCP_FLAGS")
  val L4_SRC_PORT = Value(7, "L4_SRC_PORT")
  val IPV4_SRC_ADDR = Value(8, "IPV4_SRC_ADDR")
  val SRC_MASK = Value(9, "SRC_MASK")
  val INPUT_SNMP = Value(10, "INPUT_SNMP")
  val L4_DST_PORT = Value(11, "L4_DST_PORT")
  val IPV4_DST_ADDR = Value(12, "IPV4_DST_ADDR")
  val DST_MASK = Value(13, "DST_MASK")
  val OUTPUT_SNMP = Value(14, "OUTPUT_SNMP")
  val IPV4_NEXT_HOP = Value(15, "IPV4_NEXT_HOP")
  val SRC_AS = Value(16, "SRC_AS")
  val DST_AS = Value(17, "DST_AS")
  val BGP_IPV4_NEXT_HOP = Value(18, "BGP_IPV4_NEXT_HOP")
  val IPM_DPKTS = Value(19, "IPM_DPKTS")
  val IPM_DOCTETS = Value(20, "IPM_DOCTETS")
  val LAST_SWITCHED = Value(21, "LAST_SWITCHED")
  val FIRST_SWITCHED = Value(22, "FIRST_SWITCHED")
  val OutBYTES = Value(23, "OutBYTES")
  val OutPKTS = Value(24, "OutPKTS")
  val MIN_PKT_LEN = Value(25, "MIN_PKT_LEN")
  val MAX_PKT_LEN = Value(26, "MAX_PKT_LEN")
  val IPV6_SRC_ADDR = Value(27, "IPV6_SRC_ADDR")
  val IPV6_DST_ADDR = Value(28, "IPV6_DST_ADDR")
  val IPV6_SRC_MASK = Value(29, "IPV6_SRC_MASK")
  val IPV6_DST_MASK = Value(30, "IPV6_DST_MASK")
  val IPV6_FLOW_LABEL = Value(31, "IPV6_FLOW_LABEL")
  val ICMP_TYPE = Value(32, "ICMP_TYPE")
  val MUL_IGMP_TYPE = Value(33, "MUL_IGMP_TYPE")
  val SAMPLING_INTERVAL = Value(34, "SAMPLING_INTERVAL")
  val SAMPLING_ALGORITHM = Value(35, "SAMPLING_ALGORITHM")
  val FLOW_ACTIVE_TIMEOUT = Value(36, "FLOW_ACTIVE_TIMEOUT")
  val FLOW_INACTIVE_TIMEOUT = Value(37, "FLOW_INACTIVE_TIMEOUT")
  val ENGINE_TYPE = Value(38, "ENGINE_TYPE")
  val ENGINE_ID = Value(39, "ENGINE_ID")
  val TOTAL_BYTES_EXPORTED = Value(40, "TOTAL_BYTES_EXPORTED")
  val TOTAL_EXPORT_PKTS_SENT = Value(41, "TOTAL_EXPORT_PKTS_SENT")
  val TOTAL_FLOWS_EXPORTED = Value(42, "TOTAL_FLOWS_EXPORTED")
  val IPV4_SRC_PREFIX = Value(44, "IPV4_SRC_PREFIX")
  val IPV4_DST_PREFIX = Value(45, "IPV4_DST_PREFIX")
  val MPLS_TOP_LABEL_TYPE = Value(46, "MPLS_TOP_LABEL_TYPE")
  val MPLS_TOP_LABEL_IP_ADDR = Value(47, "MPLS_TOP_LABEL_IP_ADDR")
  val FLOW_SAMPLER_ID = Value(48, "FLOW_SAMPLER_ID")
  val FLOW_SAMPLER_MODE = Value(49, "FLOW_SAMPLER_MODE")
  val FLOW_SAMPLER_RANDOM_INTERVAL = Value(50, "FLOW_SAMPLER_RANDOM_INTERVAL")
  val MIN_TTL = Value(52, "MIN_TTL")
  val MAX_TTL = Value(53, "MAX_TTL")
  val IPV4_IDENT = Value(54, "IPV4_IDENT")
  val DST_TOS = Value(55, "DST_TOS")
  val IN_SRC_MAC = Value(56, "IN_SRC_MAC")
  val OUT_DST_MAC = Value(57, "OUT_DST_MAC")
  val SRC_VLAN = Value(58, "SRC_VLAN")
  val DST_VLAN = Value(59, "DST_VLAN")
  val IP_PROTOCOL_VERSION = Value(60, "IP_PROTOCOL_VERSION")
  val DIRECTION = Value(61, "DIRECTION")
  val IPV6_NEXT_HOP = Value(62, "IPV6_NEXT_HOP")
  val BGP_IPV6_NEXT_HOP = Value(63, "BGP_IPV6_NEXT_HOP")
  val IPV6_OPTION_HEADERS = Value(64, "IPV6_OPTION_HEADERS")
  val MPLS_LABEL_1 = Value(70, "MPLS_LABEL_1")
  val MPLS_LABEL_2 = Value(71, "MPLS_LABEL_2")
  val MPLS_LABEL_3 = Value(72, "MPLS_LABEL_3")
  val MPLS_LABEL_4 = Value(73, "MPLS_LABEL_4")
  val MPLS_LABEL_5 = Value(74, "MPLS_LABEL_5")
  val MPLS_LABEL_6 = Value(75, "MPLS_LABEL_6")
  val MPLS_LABEL_7 = Value(76, "MPLS_LABEL_7")
  val MPLS_LABEL_8 = Value(77, "MPLS_LABEL_8")
  val MPLS_LABEL_9 = Value(78, "MPLS_LABEL_9")
  val MPLS_LABEL_10 = Value(79, "MPLS_LABEL_10")
  val IN_DST_MAC = Value(80, "IN_DST_MAC")
  val OUT_SRC_MAC = Value(81, "OUT_SRC_MAC")
  val IF_NAME = Value(82, "IF_NAME")
  val IF_DESC = Value(83, "IF_DESC")
  val SAMPLER_NAME = Value(84, "SAMPLER_NAME")
  val IN_PERMANENT_BYTES = Value(85, "IN_PERMANENT_BYTES")
  val IN_PERMANENT_PKTS = Value(86, "IN_PERMANENT_PKTS")
}
